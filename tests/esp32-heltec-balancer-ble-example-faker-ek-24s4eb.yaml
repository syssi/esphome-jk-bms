<<: !include ../esp32-heltec-balancer-ble-example.yaml

logger:
  level: VERY_VERBOSE
  logs:
    esp32_ble_tracker: INFO
    heltec_balancer_ble: VERY_VERBOSE
    scheduler: DEBUG
    component: INFO
    sensor: DEBUG
    mqtt: INFO
    mqtt.idf: INFO
    mqtt.component: INFO
    mqtt.sensor: INFO
    mqtt.switch: INFO
    api.service: INFO
    api: INFO
    esp32_ble: INFO
    esp32_ble_client: INFO

interval:
  - interval: 20s
    then:
      - lambda: |-
          const uint8_t device_info_frame[100] = {
            0x55, 0xaa, 0x11, 0x01, 0x01, 0x00, 0x64, 0x00, 0x45, 0x4b, 0x2d, 0x32, 0x34, 0x53, 0x34, 0x45, 0x42,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x57, 0x2d, 0x33, 0x2e, 0x32, 0x2e, 0x30, 0x5a, 0x48,
            0x2d, 0x32, 0x2e, 0x30, 0x2e, 0x38, 0x56, 0x31, 0x2e, 0x32, 0x2e, 0x37, 0x33, 0x00, 0x32, 0x30, 0x32,
            0x34, 0x30, 0x39, 0x32, 0x30, 0x03, 0x00, 0x00, 0x00, 0x64, 0x5d, 0x40, 0x00, 0x33, 0x43, 0x41, 0x35,
            0x35, 0x31, 0x39, 0x43, 0x31, 0x31, 0x30, 0x43, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xff
          };
          id(balancer0).assemble(device_info_frame, sizeof(device_info_frame));

      - delay: 2s

      - lambda: |-
          const uint8_t cell_info_frame[300] = {
            0x55, 0xaa, 0x11, 0x01, 0x02, 0x00, 0x2c, 0x01, 0xf9, 0x8c, 0xe2, 0x55, 0x40, 0xf4, 0xa4, 0x55, 0x40,
            0x3f, 0x3c, 0x55, 0x40, 0xb2, 0xd8, 0x55, 0x40, 0x4d, 0x7c, 0x55, 0x40, 0x97, 0x68, 0x55, 0x40, 0x8c,
            0xe2, 0x55, 0x40, 0xd3, 0x69, 0x55, 0x40, 0x3e, 0x91, 0x55, 0x40, 0x1d, 0x00, 0x56, 0x40, 0x1d, 0x56,
            0x55, 0x40, 0x28, 0xdb, 0x55, 0x40, 0x2f, 0xfb, 0x55, 0x40, 0x42, 0x4c, 0x55, 0x40, 0xd7, 0xce, 0x55,
            0x40, 0x12, 0x7b, 0x55, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x31, 0xf2, 0xe0, 0x3d, 0x06, 0x6c, 0xdf, 0x3d, 0x6e, 0xc6, 0xf0, 0x3d, 0x8b, 0x0b,
            0x01, 0x3e, 0x89, 0x5d, 0x09, 0x3e, 0xc2, 0xb1, 0x10, 0x3e, 0x80, 0xaf, 0x1c, 0x3e, 0x9d, 0x20, 0x22,
            0x3e, 0x7e, 0xa6, 0x24, 0x3e, 0xc4, 0x83, 0x20, 0x3e, 0xe5, 0xe1, 0x1e, 0x3e, 0xf8, 0x47, 0x14, 0x3e,
            0xc7, 0xf1, 0x0a, 0x3e, 0x03, 0x05, 0x05, 0x3e, 0xed, 0x8b, 0xfd, 0x3d, 0x13, 0xf3, 0xeb, 0x3d, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0xa2, 0x55,
            0x42, 0x1b, 0xa2, 0x55, 0x40, 0x00, 0xde, 0x43, 0x3c, 0x09, 0x02, 0x0f, 0x0a, 0x00, 0x00, 0x00, 0x00,
            0x15, 0xae, 0xa1, 0x41, 0x15, 0xae, 0xa1, 0x41, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69,
            0x5d, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6a, 0xff
          };
          id(balancer0).assemble(cell_info_frame, sizeof(cell_info_frame));

      - delay: 2s

      - lambda: |-
          const uint8_t cell_info_frame2[300] = {
            0x55, 0xaa, 0x11, 0x01, 0x02, 0x00, 0x2c, 0x01, 0xfa, 0x1d, 0x56, 0x55, 0x40, 0x45, 0xb1, 0x55, 0x40,
            0x19, 0x46, 0x55, 0x40, 0xde, 0x99, 0x55, 0x40, 0x64, 0xdc, 0x55, 0x40, 0xc7, 0x39, 0x55, 0x40, 0x6b,
            0xfc, 0x55, 0x40, 0xb2, 0xd8, 0x55, 0x40, 0xde, 0x44, 0x55, 0x40, 0x37, 0x1b, 0x56, 0x40, 0xda, 0x89,
            0x55, 0x40, 0x0a, 0x5b, 0x55, 0x40, 0x2c, 0xeb, 0x55, 0x40, 0xaa, 0x63, 0x55, 0x40, 0x02, 0x90, 0x55,
            0x40, 0x28, 0xdb, 0x55, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x31, 0xf2, 0xe0, 0x3d, 0x06, 0x6c, 0xdf, 0x3d, 0x6e, 0xc6, 0xf0, 0x3d, 0x8b, 0x0b,
            0x01, 0x3e, 0x89, 0x5d, 0x09, 0x3e, 0xc2, 0xb1, 0x10, 0x3e, 0x80, 0xaf, 0x1c, 0x3e, 0x9d, 0x20, 0x22,
            0x3e, 0x7e, 0xa6, 0x24, 0x3e, 0xc4, 0x83, 0x20, 0x3e, 0xe5, 0xe1, 0x1e, 0x3e, 0xf8, 0x47, 0x14, 0x3e,
            0xc7, 0xf1, 0x0a, 0x3e, 0x03, 0x05, 0x05, 0x3e, 0xed, 0x8b, 0xfd, 0x3d, 0x13, 0xf3, 0xeb, 0x3d, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0x9d, 0x55,
            0x42, 0x1a, 0x9d, 0x55, 0x40, 0x00, 0x70, 0x61, 0x3c, 0x09, 0x05, 0x0f, 0x0a, 0x00, 0x00, 0x00, 0x00,
            0x15, 0xae, 0xa1, 0x41, 0x15, 0xae, 0xa1, 0x41, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69,
            0x5d, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xae, 0xff
          };
          id(balancer0).assemble(cell_info_frame2, sizeof(cell_info_frame2));

      - delay: 2s

      - lambda: |-
          const uint8_t settings_frame[100] = {
            0x55, 0xaa, 0x11, 0x01, 0x04, 0x00, 0x64, 0x00, 0x10, 0x0a, 0xd7, 0xa3, 0x3b, 0x00, 0x00, 0x80, 0x40,
            0x9a, 0x99, 0x59, 0x40, 0x01, 0x01, 0x02, 0x27, 0x01, 0x00, 0x00, 0x9a, 0x99, 0x69, 0x40, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdc, 0xff
          };
          id(balancer0).assemble(settings_frame, sizeof(settings_frame));
