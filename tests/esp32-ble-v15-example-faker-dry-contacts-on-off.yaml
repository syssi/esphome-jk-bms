# See https://github.com/syssi/esphome-jk-bms/issues/681
#
# Vendor ID: JK_PB2A16S20P
# Hardware version: 15A
# Software version: 15.37
# Uptime: 20100 s
# Power on count: 38
# Device name: 40904490016
# Device passcode: 1234
# Manufacturing date: 250209
# Serial number: 40904490016
# Passcode:
# User data: JK-BMS
# Setup passcode: 654321
# UART1 Protocol: 0
# CAN Protocol: 0
# UART2 Protocol: 1
# RCV Time: 5.0 h
# RFV Time: 5.0 h

<<: !include ../esp32-ble-v14-example.yaml

interval:
  - interval: 10s
    then:
      - lambda: |-
          const uint8_t device_info_frame[300] = {
            0x55, 0xAA, 0xEB, 0x90, 0x03, 0xA5, 0x4A, 0x4B, 0x5F, 0x50, 0x42, 0x32, 0x41, 0x31, 0x36, 0x53, 0x32, 0x30,
            0x50, 0x00, 0x00, 0x00, 0x31, 0x35, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x35, 0x2E, 0x33, 0x37, 0x00,
            0x00, 0x00, 0x84, 0x4E, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x34, 0x30, 0x39, 0x30, 0x34, 0x34, 0x39, 0x30,
            0x30, 0x31, 0x36, 0x00, 0x50, 0x00, 0x00, 0x00, 0x31, 0x32, 0x33, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32, 0x35, 0x30, 0x32, 0x30, 0x39, 0x00, 0x00, 0x34, 0x30, 0x39, 0x30,
            0x34, 0x34, 0x39, 0x30, 0x30, 0x31, 0x36, 0x00, 0x30, 0x30, 0x30, 0x00, 0x4A, 0x4B, 0x2D, 0x42, 0x4D, 0x53,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x35, 0x34, 0x33, 0x32, 0x31, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4A, 0x4B, 0x2D, 0x42, 0x4D, 0x53, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0x8F, 0xE9, 0x1D, 0x02, 0x00, 0x00, 0x00, 0x00,
            0x90, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xD8, 0xE7, 0xFE, 0x3F, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x01, 0xFF, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x09, 0x0B, 0x00, 0x01, 0x64, 0x00, 0x00, 0x00, 0x5F, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x14, 0x00,
            0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x10, 0x0E, 0x00, 0x00, 0x32, 0x32, 0x01, 0x1E,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
            0x9F, 0xE9, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19
          };
          id(bms0).assemble(device_info_frame, sizeof(device_info_frame));

      - delay: 2s

      # DRY1 on
      - lambda: |-
          const uint8_t cell_info_frame[300] = {
            0x55, 0xAA, 0xEB, 0x90, 0x02, 0xDD, 0x30, 0x0E, 0x35, 0x0E, 0x1C, 0x0E, 0x8A, 0x0D, 0x1B, 0x0E, 0x1A, 0x0E,
            0x1F, 0x0E, 0xDD, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
            0x00, 0x00, 0xE7, 0x0D, 0x59, 0x01, 0x01, 0x07, 0x53, 0x00, 0x4F, 0x00, 0x53, 0x00, 0x4F, 0x00, 0x52, 0x00,
            0x4F, 0x00, 0x52, 0x00, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39, 0x6F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x67, 0x00, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x15, 0x9A, 0x00, 0x00, 0x40, 0x9C,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x65, 0x4F, 0x00, 0x00,
            0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
            0x01, 0x00, 0x00, 0x00, 0x90, 0x03, 0x00, 0x00, 0x00, 0x00, 0xCF, 0x41, 0x3F, 0x40, 0x00, 0x00, 0x00, 0x00,
            0x1F, 0x0B, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x06, 0x01, 0x00, 0x74, 0xAB, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0xEE, 0x00, 0x87, 0x00, 0x84, 0x00, 0x8D, 0x03, 0x80, 0xC9, 0xA7, 0x09, 0x54, 0x00, 0x00, 0x00,
            0x80, 0x51, 0x01, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
            0xFF, 0x7F, 0xDC, 0x2F, 0x01, 0x01, 0xB0, 0x0F, 0x07, 0x00, 0x00, 0xE5
          };
          id(bms0).assemble(cell_info_frame, sizeof(cell_info_frame));

      - delay: 2s

      # DRY2 on
      - lambda: |-
          const uint8_t cell_info_frame[300] = {
            0x55, 0xAA, 0xEB, 0x90, 0x02, 0x1E, 0x32, 0x0E, 0x37, 0x0E, 0x1F, 0x0E, 0x8C, 0x0D, 0x1C, 0x0E, 0x1C, 0x0E,
            0x20, 0x0E, 0xEC, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
            0x00, 0x00, 0xEB, 0x0D, 0x4A, 0x01, 0x01, 0x07, 0x53, 0x00, 0x4F, 0x00, 0x53, 0x00, 0x4F, 0x00, 0x52, 0x00,
            0x4F, 0x00, 0x52, 0x00, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x6F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xB3, 0x00, 0xD4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x18, 0x9A, 0x00, 0x00, 0x40, 0x9C,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x93, 0x4C, 0x00, 0x00,
            0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
            0x01, 0x00, 0x00, 0x00, 0x90, 0x03, 0x00, 0x00, 0x00, 0x00, 0xCF, 0x41, 0x3F, 0x40, 0x00, 0x00, 0x00, 0x00,
            0x22, 0x0B, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x06, 0x01, 0x00, 0x3E, 0x8F, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0xF0, 0x00, 0xD7, 0x00, 0xD5, 0x00, 0x8D, 0x03, 0xAE, 0xC6, 0xA7, 0x09, 0x54, 0x00, 0x00, 0x00,
            0x80, 0x51, 0x01, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
            0xFF, 0x7F, 0xDC, 0x2F, 0x01, 0x01, 0xB0, 0x0F, 0x07, 0x00, 0x00, 0xA7
          };
          id(bms0).assemble(cell_info_frame, sizeof(cell_info_frame));

      - delay: 2s

      # DRY1 on + DRY2 on
      - lambda: |-
          const uint8_t cell_info_frame[300] = {
            0x55, 0xAA, 0xEB, 0x90, 0x02, 0xA8, 0x2A, 0x0E, 0x30, 0x0E, 0x17, 0x0E, 0x85, 0x0D, 0x15, 0x0E, 0x14, 0x0E,
            0x1A, 0x0E, 0xC9, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
            0x00, 0x00, 0xE0, 0x0D, 0x66, 0x01, 0x01, 0x07, 0x56, 0x00, 0x4F, 0x00, 0x54, 0x00, 0x50, 0x00, 0x54, 0x00,
            0x50, 0x00, 0x53, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xCA, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x6E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xCC, 0x00, 0xCE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x10, 0x9A, 0x00, 0x00, 0x40, 0x9C,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xE1, 0x55, 0x00, 0x00,
            0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
            0x01, 0x00, 0x00, 0x00, 0x90, 0x03, 0x00, 0x00, 0x00, 0x00, 0xCF, 0x41, 0x3F, 0x40, 0x00, 0x00, 0x00, 0x00,
            0x19, 0x0B, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x06, 0x01, 0x00, 0xB6, 0x1D, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0xCA, 0x00, 0xBF, 0x00, 0xCF, 0x00, 0x8D, 0x03, 0x2D, 0x9D, 0xA9, 0x09, 0x56, 0x00, 0x00, 0x00,
            0x80, 0x51, 0x01, 0x00, 0x00, 0x01, 0x03, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
            0xFF, 0x7F, 0xDC, 0x2F, 0x01, 0x01, 0xB0, 0x0F, 0x07, 0x00, 0x00, 0xE4
          };
          id(bms0).assemble(cell_info_frame, sizeof(cell_info_frame));

      - delay: 2s

      # DRY1 off + DRY off
      - lambda: |-
          const uint8_t cell_info_frame[300] = {
            0x55, 0xAA, 0xEB, 0x90, 0x02, 0xF3, 0x2F, 0x0E, 0x32, 0x0E, 0x1A, 0x0E, 0x89, 0x0D, 0x17, 0x0E, 0x16, 0x0E,
            0x1C, 0x0E, 0xD6, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
            0x00, 0x00, 0xE4, 0x0D, 0x5C, 0x01, 0x01, 0x07, 0x56, 0x00, 0x4F, 0x00, 0x54, 0x00, 0x50, 0x00, 0x54, 0x00,
            0x50, 0x00, 0x53, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xC5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23, 0x6F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0xC5, 0x00, 0xC6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x11, 0x9A, 0x00, 0x00, 0x40, 0x9C,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x4D, 0x54, 0x00, 0x00,
            0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
            0x01, 0x00, 0x00, 0x00, 0x90, 0x03, 0x00, 0x00, 0x00, 0x00, 0xCF, 0x41, 0x3F, 0x40, 0x00, 0x00, 0x00, 0x00,
            0x1D, 0x0B, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x06, 0x01, 0x00, 0xF1, 0x0D, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0xC5, 0x00, 0xD0, 0x00, 0xC5, 0x00, 0x8D, 0x03, 0x99, 0x9B, 0xA9, 0x09, 0x56, 0x00, 0x00, 0x00,
            0x80, 0x51, 0x01, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
            0xFF, 0x7F, 0xDC, 0x2F, 0x01, 0x01, 0xB0, 0x0F, 0x07, 0x00, 0x00, 0x59
          };
          id(bms0).assemble(cell_info_frame, sizeof(cell_info_frame));
